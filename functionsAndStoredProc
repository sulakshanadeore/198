stored procedures=------ named blocks of code  whcih are used for exectuion of statement/statements
DONOT RETURN Anything they just execute the code--

Insert-----
Update
Delete

-------------------------------------------------------------------
display the sum of salary,sum of orders.total order for a proudct ----- return value


functions-------------
calculations and these calculated values are returned by using a return statement.
IF u have a single value to return----- SCALAR functions
IF u have multiple rows to be returned ------- table valued functions

Types of functions
1) INLINE TABLE VALUED
2) MULTI STATEMENT TABLE VALUED
----------------------------------------------------------------------

It will accept parameters

types of parameters---  default parameter type is INPUT
1) IN ---- input
2) out=---- output
---------------------------------------------------
------------------------------------------------------------------
USE [northwind]
GO

/****** Object:  UserDefinedFunction [dbo].[fn_TotalOrderValue]    Script Date: 12-Oct-21 5:16:56 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[fn_TotalOrderValue]
(
	-- Add the parameters for the function here
	@p_orderid int
)
RETURNS money
AS
BEGIN
	-- Declare the return variable here
	DECLARE @orderamt money

	-- Add the T-SQL statements to compute the return value here
	
	select   @orderamt=sum((UnitPrice*Quantity) -  ((UnitPrice*Quantity)*Discount))  from [Order Details]
where orderid=@p_orderid
group by orderid

	-- Return the result of the function
	RETURN @orderamt

END

GO


----------------------------------------------------------------------


USE [northwind]
GO
/****** Object:  UserDefinedFunction [dbo].[fn_SupplierDetails]    Script Date: 12-Oct-21 5:13:17 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER FUNCTION [dbo].[fn_SupplierDetails]
(
	-- Add the parameters for the function here
	@p_country nvarchar(15)
)
RETURNS 
@suppliersInCity  TABLE 
(
	-- Add the column definitions for the TABLE variable here
	suppid int,
	suppname nvarchar(40),
	contacrName nvarchar(50)

)
AS
BEGIN
	-- Fill the table variable with the rows for your result set
	insert into @suppliersInCity 
	select SupplierID,CompanyName,ContactName from suppliers where country =@p_country

	RETURN 
END
-------------------------------------------------------------------------------------
-- ================================================
-- Template generated from Template Explorer using:
-- Create Multi-Statement Function (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the function.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE FUNCTION fn_SupplierDetails
(
	-- Add the parameters for the function here
	@p_city nvarchar(15)
)
RETURNS 
@suppliersInCity  TABLE 
(
	-- Add the column definitions for the TABLE variable here
	suppid int,
	suppname nvarchar(40),
	contacrName nvarchar(50)

)
AS
BEGIN
	-- Fill the table variable with the rows for your result set
	insert into @suppliersInCity 
	select SupplierID,CompanyName,ContactName from suppliers where city =@p_city

	RETURN 
END
GO
------------------------------------------------------------------------------
-- ================================================
-- Template generated from Template Explorer using:
-- Create Inline Function (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the function.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE FUNCTION fn_OrderDetails
(	
	-- Add the parameters for the function here
	@p_orderid int
)
RETURNS TABLE 
AS
RETURN 
(
	-- Add the SELECT statement with parameter references here
	SELECT * from [Order Details]
	where OrderID=@p_orderid
)
GO

-----------------------------------------------------------------------------------
USE [northwind]
GO
/****** Object:  StoredProcedure [dbo].[sp_SupplierCode]    Script Date: 12-Oct-21 4:49:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[sp_SupplierCode]
	-- Add the parameters for the stored procedure here
	@p_suppName nvarchar(40),
	@p_city nvarchar(15),
	@p_totalSupplier int output
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	insert into Suppliers(CompanyName,City) values (@p_suppName,@p_city);
    -- Insert statements for procedure here
	select @p_totalSupplier=count(supplierid) from Suppliers

END
-----------------------------------------------------------------------

-- ================================================
-- Template generated from Template Explorer using:
-- Create Scalar Function (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the function.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION fn_TotalOrderValue
(
	-- Add the parameters for the function here
	@p_orderid int
)
RETURNS money
AS
BEGIN
	-- Declare the return variable here
	DECLARE @orderamt money

	-- Add the T-SQL statements to compute the return value here
	
	select   @orderamt=sum((UnitPrice*Quantity) -  ((UnitPrice*Quantity)*Discount))  from [Order Details]
where orderid=@p_orderid
group by orderid

	-- Return the result of the function
	RETURN @orderamt

END
GO

---------------------------------------------------------------------
